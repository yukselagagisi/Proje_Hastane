<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>